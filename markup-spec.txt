encoded in UTF-8
Lines=terminated with carriage return (U+000D), carriage-return/line-feed (U+000D U+000A), line feed (U+000A)
Tab (U+0009)=8 spaces
blank line=2 consecutive end-of-line /?/ with white space between
Trailing white space has no meaning, not preserved
tree=built of tagged elements, strings
abstract syntax tree=root 1 element whose tag=`body`,children=elements
Normal paragraphs=blocks of text separated by /+/ blank lines
Normal paragraphs ? contain 1 line break=spaces
body of paragraph ? contain tagged markup
tag of paragraph=`p`
Header=paragraph with leading `*`s followed by 1 space
more stars lower in hierarchy header
content of header=everything after `*`, space, otherwise parsed like paragraph
Header=tagged with `h`number of stars
Block quotes=1 of 3 “sections” indicated by indentation
section ends at end of file/by occurrence of less-indented non-blank line
Sections nest
block quote=2 indent relative to enclosing section, ? contain paragraphs, headers, lists, verbatim sections
Block quote=tagged with `blockquote`
Verbatim sections=indent 3 relative to enclosing section
in verbatim section all text=captured exactly as is
Verbatim section=tagged with `pre`
Lists=2 indent followed by list marker, either `#` for ordered list/`-` for unordered list
ordered list=tagged with `ol`, unordered with `ul`
list marker=followed by space, then text of 1st list item
List items=tagged with `li`, contain paragraphs, contents=indented to line up under 1st character of beginning of list item
Subsequent items=marked with list marker in same column as original list marker, 1 space
syntax to add hyperlinks to document
Within normal text (!verbatim section) link=enclosing text to act as hyperlink with `[]`s=element tagged `link`
If text between `[]`s includes `|`, text after `|`=wrapped in `key` element
paragraph solely text in `[]`s followed by /*/ spaces followed by text enclosed in `<>`s=element tagged `link_def` children=`link` element comprising text between `[]`s, `url` element comprising text between `<>`s
in-text `link` elements hyperlinks with `link` text linking to URL in corresponding `link_def` element
other markup, uses TeX-like notation `\tagname{stuff}`
Tag names consist of letters, numbers, `-`, `.`, `+`
Tagged markup ? nest
element from tagged markup=tagged with tagname
Certain tag names ?=sub-documents parsed differently than simple spans of text
content of sub-document=between opening, closing {}s=document, contain /+/ paragraph, ?contain headers, block quotes, lists, verbatim sections, even nested sub-documents
Footnotes=parsed as sub-documents
blank line separating paragraphs of sub-document no effect enclosing paragraph
If sub-document=part of indented section then subsequent lines of sub-document indented as enclosing paragraph
specify certain tag names parsed as sub-documents rather than character markup
Outside verbatim sections, backslash escape any not legal tag name character, stripping of significance
`\`, `{`, `}`=escaped outside verbatim section if part of text
non-tag-name characters=escaped anytime, only necessary when otherwise have syntactic significance
`*` not escaped except at beginning of paragraph, where `*` otherwise mark paragraph as header
line starting with `-*-` indicates \i{mode line}
strip modelines at top level of document to save having to strip modelines out later in processing
complete system consists of parser parse text file into data structure representing abstract syntax tree, /+/ back-ends render such tree into some other form
specify trivial mapping from abstract tree to well-formed XML: each element=mapped to XML element with same name, with node children mapped to XML in same way, string children as text
